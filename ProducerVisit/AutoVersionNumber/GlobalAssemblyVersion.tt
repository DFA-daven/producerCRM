<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
/// <copyright file="GlobalAssemblyVersion.cs" company="<#= GetCompany() #>">
///     <#= GetCopyright() #>
/// </copyright>
/// <remarks>
///     This code was generated by a tool. Any changes made manually will be lost
///     the next time this code is regenerated.
/// </remarks>
///

using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;

//      Major Version
//      Minor Version 
//      Build Number
//      Revision
// 
// Major and minor version are hard-coded.
// Build number is: [two-digit year][three-digit day-of-year]
// Revision is: the number of seconds since midnight (divided by 2)
[assembly: AssemblyVersion("<#= GetVersion() #>.<#= GetBuildNumber() #>.<#= GetRevisionNumber() #>")]
[assembly: AssemblyFileVersion("<#= GetVersion() #>.<#= GetBuildNumber() #>.<#= GetRevisionNumber() #>")]

[assembly: AssemblyProduct("Producer Contact")]
[assembly: AssemblyCompany("<#= GetCompany() #>")]
[assembly: AssemblyCopyright("<#= GetCopyright() #>")]

<#

// fixme: this only catches if the debugger is attached - so 'alpha' and 'beta' are never true.
#if ALPHA
	WriteLine("[assembly: AssemblyConfiguration(\"Alpha\")]");
#elif BETA
	WriteLine("[assembly: AssemblyConfiguration(\"Beta\")]");
#elif DEBUG
	WriteLine("[assembly: AssemblyConfiguration(\"Debug\")]");
#else
	WriteLine("[assembly: AssemblyConfiguration(\"Release\")]");
#endif
		
#>

<#@ include file="Custom Code\CommonT4.t4" #>
