//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace CallForm.iOS.com.dairydataprocessing.adauth {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActiveDirectoryAuthSoap", Namespace="http://dairylea/webservices/")]
    public partial class ActiveDirectoryAuth : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingleServerSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrganizationalUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationalUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMembersFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserAccountFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserWithServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllObjectsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActiveDirectoryAuth() {
            this.Url = "http://adauth.dairydataprocessing.com/ActiveDirectoryAuthWS.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetServerCompletedEventHandler SetServerCompleted;
        
        /// <remarks/>
        public event GetServerCompletedEventHandler GetServerCompleted;
        
        /// <remarks/>
        public event SingleServerSearchCompletedEventHandler SingleServerSearchCompleted;
        
        /// <remarks/>
        public event CreateOrganizationalUnitCompletedEventHandler CreateOrganizationalUnitCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationalUnitCompletedEventHandler DeleteOrganizationalUnitCompleted;
        
        /// <remarks/>
        public event CreateSecurityGroupCompletedEventHandler CreateSecurityGroupCompleted;
        
        /// <remarks/>
        public event DeleteSecurityGroupCompletedEventHandler DeleteSecurityGroupCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event GetMembersFromGroupCompletedEventHandler GetMembersFromGroupCompleted;
        
        /// <remarks/>
        public event GetGroupMembershipCompletedEventHandler GetGroupMembershipCompleted;
        
        /// <remarks/>
        public event CreateUserAccountFullCompletedEventHandler CreateUserAccountFullCompleted;
        
        /// <remarks/>
        public event CreateUserAccountCompletedEventHandler CreateUserAccountCompleted;
        
        /// <remarks/>
        public event DeleteUserAccountCompletedEventHandler DeleteUserAccountCompleted;
        
        /// <remarks/>
        public event UpdateUserAttributeCompletedEventHandler UpdateUserAttributeCompleted;
        
        /// <remarks/>
        public event UpdateUserAccountCompletedEventHandler UpdateUserAccountCompleted;
        
        /// <remarks/>
        public event UserExistsCompletedEventHandler UserExistsCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event AuthenticateUserWithServerCompletedEventHandler AuthenticateUserWithServerCompleted;
        
        /// <remarks/>
        public event EnableUserAccountCompletedEventHandler EnableUserAccountCompleted;
        
        /// <remarks/>
        public event DisableUserAccountCompletedEventHandler DisableUserAccountCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event FindUserCompletedEventHandler FindUserCompleted;
        
        /// <remarks/>
        public event SearchUsersByPropertyCompletedEventHandler SearchUsersByPropertyCompleted;
        
        /// <remarks/>
        public event FindGroupCompletedEventHandler FindGroupCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event GetAllGroupsCompletedEventHandler GetAllGroupsCompleted;
        
        /// <remarks/>
        public event GetAllOUCompletedEventHandler GetAllOUCompleted;
        
        /// <remarks/>
        public event GetAllObjectsCompletedEventHandler GetAllObjectsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/SetServer", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetServer(eServerType server) {
            object[] results = this.Invoke("SetServer", new object[] {
                        server});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetServerAsync(eServerType server) {
            this.SetServerAsync(server, null);
        }
        
        /// <remarks/>
        public void SetServerAsync(eServerType server, object userState) {
            if ((this.SetServerOperationCompleted == null)) {
                this.SetServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetServerOperationCompleted);
            }
            this.InvokeAsync("SetServer", new object[] {
                        server}, this.SetServerOperationCompleted, userState);
        }
        
        private void OnSetServerOperationCompleted(object arg) {
            if ((this.SetServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetServerCompleted(this, new SetServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetServer", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServer() {
            object[] results = this.Invoke("GetServer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerAsync() {
            this.GetServerAsync(null);
        }
        
        /// <remarks/>
        public void GetServerAsync(object userState) {
            if ((this.GetServerOperationCompleted == null)) {
                this.GetServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerOperationCompleted);
            }
            this.InvokeAsync("GetServer", new object[0], this.GetServerOperationCompleted, userState);
        }
        
        private void OnGetServerOperationCompleted(object arg) {
            if ((this.GetServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerCompleted(this, new GetServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/SingleServerSearch", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SingleServerSearch(bool value) {
            this.Invoke("SingleServerSearch", new object[] {
                        value});
        }
        
        /// <remarks/>
        public void SingleServerSearchAsync(bool value) {
            this.SingleServerSearchAsync(value, null);
        }
        
        /// <remarks/>
        public void SingleServerSearchAsync(bool value, object userState) {
            if ((this.SingleServerSearchOperationCompleted == null)) {
                this.SingleServerSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingleServerSearchOperationCompleted);
            }
            this.InvokeAsync("SingleServerSearch", new object[] {
                        value}, this.SingleServerSearchOperationCompleted, userState);
        }
        
        private void OnSingleServerSearchOperationCompleted(object arg) {
            if ((this.SingleServerSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingleServerSearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/CreateOrganizationalUnit", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateOrganizationalUnit(string ouPath, string ouName) {
            this.Invoke("CreateOrganizationalUnit", new object[] {
                        ouPath,
                        ouName});
        }
        
        /// <remarks/>
        public void CreateOrganizationalUnitAsync(string ouPath, string ouName) {
            this.CreateOrganizationalUnitAsync(ouPath, ouName, null);
        }
        
        /// <remarks/>
        public void CreateOrganizationalUnitAsync(string ouPath, string ouName, object userState) {
            if ((this.CreateOrganizationalUnitOperationCompleted == null)) {
                this.CreateOrganizationalUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrganizationalUnitOperationCompleted);
            }
            this.InvokeAsync("CreateOrganizationalUnit", new object[] {
                        ouPath,
                        ouName}, this.CreateOrganizationalUnitOperationCompleted, userState);
        }
        
        private void OnCreateOrganizationalUnitOperationCompleted(object arg) {
            if ((this.CreateOrganizationalUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrganizationalUnitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/DeleteOrganizationalUnit", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrganizationalUnit(string ouPath) {
            this.Invoke("DeleteOrganizationalUnit", new object[] {
                        ouPath});
        }
        
        /// <remarks/>
        public void DeleteOrganizationalUnitAsync(string ouPath) {
            this.DeleteOrganizationalUnitAsync(ouPath, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationalUnitAsync(string ouPath, object userState) {
            if ((this.DeleteOrganizationalUnitOperationCompleted == null)) {
                this.DeleteOrganizationalUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationalUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationalUnit", new object[] {
                        ouPath}, this.DeleteOrganizationalUnitOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationalUnitOperationCompleted(object arg) {
            if ((this.DeleteOrganizationalUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationalUnitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/CreateSecurityGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateSecurityGroup(string location, string groupName) {
            this.Invoke("CreateSecurityGroup", new object[] {
                        location,
                        groupName});
        }
        
        /// <remarks/>
        public void CreateSecurityGroupAsync(string location, string groupName) {
            this.CreateSecurityGroupAsync(location, groupName, null);
        }
        
        /// <remarks/>
        public void CreateSecurityGroupAsync(string location, string groupName, object userState) {
            if ((this.CreateSecurityGroupOperationCompleted == null)) {
                this.CreateSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("CreateSecurityGroup", new object[] {
                        location,
                        groupName}, this.CreateSecurityGroupOperationCompleted, userState);
        }
        
        private void OnCreateSecurityGroupOperationCompleted(object arg) {
            if ((this.CreateSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSecurityGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/DeleteSecurityGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSecurityGroup(string groupPath) {
            this.Invoke("DeleteSecurityGroup", new object[] {
                        groupPath});
        }
        
        /// <remarks/>
        public void DeleteSecurityGroupAsync(string groupPath) {
            this.DeleteSecurityGroupAsync(groupPath, null);
        }
        
        /// <remarks/>
        public void DeleteSecurityGroupAsync(string groupPath, object userState) {
            if ((this.DeleteSecurityGroupOperationCompleted == null)) {
                this.DeleteSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteSecurityGroup", new object[] {
                        groupPath}, this.DeleteSecurityGroupOperationCompleted, userState);
        }
        
        private void OnDeleteSecurityGroupOperationCompleted(object arg) {
            if ((this.DeleteSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSecurityGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/AddUserToGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUserToGroup(string userPath, string groupPath) {
            this.Invoke("AddUserToGroup", new object[] {
                        userPath,
                        groupPath});
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string userPath, string groupPath) {
            this.AddUserToGroupAsync(userPath, groupPath, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string userPath, string groupPath, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        userPath,
                        groupPath}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/RemoveUserFromGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserFromGroup(string userPath, string groupPath) {
            this.Invoke("RemoveUserFromGroup", new object[] {
                        userPath,
                        groupPath});
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string userPath, string groupPath) {
            this.RemoveUserFromGroupAsync(userPath, groupPath, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string userPath, string groupPath, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        userPath,
                        groupPath}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetMembersFromGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMembersFromGroup(string groupPath) {
            object[] results = this.Invoke("GetMembersFromGroup", new object[] {
                        groupPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMembersFromGroupAsync(string groupPath) {
            this.GetMembersFromGroupAsync(groupPath, null);
        }
        
        /// <remarks/>
        public void GetMembersFromGroupAsync(string groupPath, object userState) {
            if ((this.GetMembersFromGroupOperationCompleted == null)) {
                this.GetMembersFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMembersFromGroupOperationCompleted);
            }
            this.InvokeAsync("GetMembersFromGroup", new object[] {
                        groupPath}, this.GetMembersFromGroupOperationCompleted, userState);
        }
        
        private void OnGetMembersFromGroupOperationCompleted(object arg) {
            if ((this.GetMembersFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMembersFromGroupCompleted(this, new GetMembersFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetGroupMembership", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupMembership(string userName) {
            object[] results = this.Invoke("GetGroupMembership", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupMembershipAsync(string userName) {
            this.GetGroupMembershipAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetGroupMembershipAsync(string userName, object userState) {
            if ((this.GetGroupMembershipOperationCompleted == null)) {
                this.GetGroupMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMembershipOperationCompleted);
            }
            this.InvokeAsync("GetGroupMembership", new object[] {
                        userName}, this.GetGroupMembershipOperationCompleted, userState);
        }
        
        private void OnGetGroupMembershipOperationCompleted(object arg) {
            if ((this.GetGroupMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupMembershipCompleted(this, new GetGroupMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/CreateUserAccountFull", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUserAccountFull(string location, string userName, string password, string displayName, string firstName, string lastName, string company) {
            object[] results = this.Invoke("CreateUserAccountFull", new object[] {
                        location,
                        userName,
                        password,
                        displayName,
                        firstName,
                        lastName,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAccountFullAsync(string location, string userName, string password, string displayName, string firstName, string lastName, string company) {
            this.CreateUserAccountFullAsync(location, userName, password, displayName, firstName, lastName, company, null);
        }
        
        /// <remarks/>
        public void CreateUserAccountFullAsync(string location, string userName, string password, string displayName, string firstName, string lastName, string company, object userState) {
            if ((this.CreateUserAccountFullOperationCompleted == null)) {
                this.CreateUserAccountFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserAccountFullOperationCompleted);
            }
            this.InvokeAsync("CreateUserAccountFull", new object[] {
                        location,
                        userName,
                        password,
                        displayName,
                        firstName,
                        lastName,
                        company}, this.CreateUserAccountFullOperationCompleted, userState);
        }
        
        private void OnCreateUserAccountFullOperationCompleted(object arg) {
            if ((this.CreateUserAccountFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserAccountFullCompleted(this, new CreateUserAccountFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/CreateUserAccount", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUserAccount(string location, string userName, string password, string displayName) {
            object[] results = this.Invoke("CreateUserAccount", new object[] {
                        location,
                        userName,
                        password,
                        displayName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAccountAsync(string location, string userName, string password, string displayName) {
            this.CreateUserAccountAsync(location, userName, password, displayName, null);
        }
        
        /// <remarks/>
        public void CreateUserAccountAsync(string location, string userName, string password, string displayName, object userState) {
            if ((this.CreateUserAccountOperationCompleted == null)) {
                this.CreateUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserAccountOperationCompleted);
            }
            this.InvokeAsync("CreateUserAccount", new object[] {
                        location,
                        userName,
                        password,
                        displayName}, this.CreateUserAccountOperationCompleted, userState);
        }
        
        private void OnCreateUserAccountOperationCompleted(object arg) {
            if ((this.CreateUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserAccountCompleted(this, new CreateUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/DeleteUserAccount", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUserAccount(string userPath) {
            this.Invoke("DeleteUserAccount", new object[] {
                        userPath});
        }
        
        /// <remarks/>
        public void DeleteUserAccountAsync(string userPath) {
            this.DeleteUserAccountAsync(userPath, null);
        }
        
        /// <remarks/>
        public void DeleteUserAccountAsync(string userPath, object userState) {
            if ((this.DeleteUserAccountOperationCompleted == null)) {
                this.DeleteUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteUserAccount", new object[] {
                        userPath}, this.DeleteUserAccountOperationCompleted, userState);
        }
        
        private void OnDeleteUserAccountOperationCompleted(object arg) {
            if ((this.DeleteUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/UpdateUserAttribute", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserAttribute(string userPath, string attribute, string value) {
            this.Invoke("UpdateUserAttribute", new object[] {
                        userPath,
                        attribute,
                        value});
        }
        
        /// <remarks/>
        public void UpdateUserAttributeAsync(string userPath, string attribute, string value) {
            this.UpdateUserAttributeAsync(userPath, attribute, value, null);
        }
        
        /// <remarks/>
        public void UpdateUserAttributeAsync(string userPath, string attribute, string value, object userState) {
            if ((this.UpdateUserAttributeOperationCompleted == null)) {
                this.UpdateUserAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAttribute", new object[] {
                        userPath,
                        attribute,
                        value}, this.UpdateUserAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateUserAttributeOperationCompleted(object arg) {
            if ((this.UpdateUserAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/UpdateUserAccount", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserAccount(string userPath, string displayName, string firstName, string lastName, string company) {
            this.Invoke("UpdateUserAccount", new object[] {
                        userPath,
                        displayName,
                        firstName,
                        lastName,
                        company});
        }
        
        /// <remarks/>
        public void UpdateUserAccountAsync(string userPath, string displayName, string firstName, string lastName, string company) {
            this.UpdateUserAccountAsync(userPath, displayName, firstName, lastName, company, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccountAsync(string userPath, string displayName, string firstName, string lastName, string company, object userState) {
            if ((this.UpdateUserAccountOperationCompleted == null)) {
                this.UpdateUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccount", new object[] {
                        userPath,
                        displayName,
                        firstName,
                        lastName,
                        company}, this.UpdateUserAccountOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccountOperationCompleted(object arg) {
            if ((this.UpdateUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/UserExists", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserExists(string username) {
            object[] results = this.Invoke("UserExists", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username) {
            this.UserExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username, object userState) {
            if ((this.UserExistsOperationCompleted == null)) {
                this.UserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserExistsOperationCompleted);
            }
            this.InvokeAsync("UserExists", new object[] {
                        username}, this.UserExistsOperationCompleted, userState);
        }
        
        private void OnUserExistsOperationCompleted(object arg) {
            if ((this.UserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/AuthenticateUser", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateUser(string userName, string password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userName, string password) {
            this.AuthenticateUserAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userName, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        userName,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/AuthenticateUserWithServer", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateUserWithServer(string userName, string password, ref eServerType server) {
            object[] results = this.Invoke("AuthenticateUserWithServer", new object[] {
                        userName,
                        password,
                        server});
            server = ((eServerType)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserWithServerAsync(string userName, string password, eServerType server) {
            this.AuthenticateUserWithServerAsync(userName, password, server, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserWithServerAsync(string userName, string password, eServerType server, object userState) {
            if ((this.AuthenticateUserWithServerOperationCompleted == null)) {
                this.AuthenticateUserWithServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserWithServerOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUserWithServer", new object[] {
                        userName,
                        password,
                        server}, this.AuthenticateUserWithServerOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserWithServerOperationCompleted(object arg) {
            if ((this.AuthenticateUserWithServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserWithServerCompleted(this, new AuthenticateUserWithServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/EnableUserAccount", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableUserAccount(string userPath) {
            this.Invoke("EnableUserAccount", new object[] {
                        userPath});
        }
        
        /// <remarks/>
        public void EnableUserAccountAsync(string userPath) {
            this.EnableUserAccountAsync(userPath, null);
        }
        
        /// <remarks/>
        public void EnableUserAccountAsync(string userPath, object userState) {
            if ((this.EnableUserAccountOperationCompleted == null)) {
                this.EnableUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableUserAccountOperationCompleted);
            }
            this.InvokeAsync("EnableUserAccount", new object[] {
                        userPath}, this.EnableUserAccountOperationCompleted, userState);
        }
        
        private void OnEnableUserAccountOperationCompleted(object arg) {
            if ((this.EnableUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableUserAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/DisableUserAccount", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisableUserAccount(string userPath) {
            this.Invoke("DisableUserAccount", new object[] {
                        userPath});
        }
        
        /// <remarks/>
        public void DisableUserAccountAsync(string userPath) {
            this.DisableUserAccountAsync(userPath, null);
        }
        
        /// <remarks/>
        public void DisableUserAccountAsync(string userPath, object userState) {
            if ((this.DisableUserAccountOperationCompleted == null)) {
                this.DisableUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableUserAccountOperationCompleted);
            }
            this.InvokeAsync("DisableUserAccount", new object[] {
                        userPath}, this.DisableUserAccountOperationCompleted, userState);
        }
        
        private void OnDisableUserAccountOperationCompleted(object arg) {
            if ((this.DisableUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableUserAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetUserInfo", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ADObject GetUserInfo(string path) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        path});
            return ((ADObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string path) {
            this.GetUserInfoAsync(path, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string path, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        path}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/FindUser", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindUser(string userName) {
            object[] results = this.Invoke("FindUser", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindUserAsync(string userName) {
            this.FindUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void FindUserAsync(string userName, object userState) {
            if ((this.FindUserOperationCompleted == null)) {
                this.FindUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUserOperationCompleted);
            }
            this.InvokeAsync("FindUser", new object[] {
                        userName}, this.FindUserOperationCompleted, userState);
        }
        
        private void OnFindUserOperationCompleted(object arg) {
            if ((this.FindUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUserCompleted(this, new FindUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/SearchUsersByProperty", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SearchUsersByProperty(string propertyName, string searchFilter) {
            object[] results = this.Invoke("SearchUsersByProperty", new object[] {
                        propertyName,
                        searchFilter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByPropertyAsync(string propertyName, string searchFilter) {
            this.SearchUsersByPropertyAsync(propertyName, searchFilter, null);
        }
        
        /// <remarks/>
        public void SearchUsersByPropertyAsync(string propertyName, string searchFilter, object userState) {
            if ((this.SearchUsersByPropertyOperationCompleted == null)) {
                this.SearchUsersByPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByPropertyOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByProperty", new object[] {
                        propertyName,
                        searchFilter}, this.SearchUsersByPropertyOperationCompleted, userState);
        }
        
        private void OnSearchUsersByPropertyOperationCompleted(object arg) {
            if ((this.SearchUsersByPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByPropertyCompleted(this, new SearchUsersByPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/FindGroup", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindGroup(string userName) {
            object[] results = this.Invoke("FindGroup", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindGroupAsync(string userName) {
            this.FindGroupAsync(userName, null);
        }
        
        /// <remarks/>
        public void FindGroupAsync(string userName, object userState) {
            if ((this.FindGroupOperationCompleted == null)) {
                this.FindGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindGroupOperationCompleted);
            }
            this.InvokeAsync("FindGroup", new object[] {
                        userName}, this.FindGroupOperationCompleted, userState);
        }
        
        private void OnFindGroupOperationCompleted(object arg) {
            if ((this.FindGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindGroupCompleted(this, new FindGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/ResetPassword", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetPassword(string userPath, string password) {
            this.Invoke("ResetPassword", new object[] {
                        userPath,
                        password});
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string userPath, string password) {
            this.ResetPasswordAsync(userPath, password, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string userPath, string password, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        userPath,
                        password}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetAllUsers", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ADObject[] GetAllUsers(string location, bool recursive, string sortProperty, int direction) {
            object[] results = this.Invoke("GetAllUsers", new object[] {
                        location,
                        recursive,
                        sortProperty,
                        direction});
            return ((ADObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string location, bool recursive, string sortProperty, int direction) {
            this.GetAllUsersAsync(location, recursive, sortProperty, direction, null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string location, bool recursive, string sortProperty, int direction, object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[] {
                        location,
                        recursive,
                        sortProperty,
                        direction}, this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetAllGroups", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ADObject[] GetAllGroups(string location, bool recursive) {
            object[] results = this.Invoke("GetAllGroups", new object[] {
                        location,
                        recursive});
            return ((ADObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(string location, bool recursive) {
            this.GetAllGroupsAsync(location, recursive, null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(string location, bool recursive, object userState) {
            if ((this.GetAllGroupsOperationCompleted == null)) {
                this.GetAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllGroups", new object[] {
                        location,
                        recursive}, this.GetAllGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsOperationCompleted(object arg) {
            if ((this.GetAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsCompleted(this, new GetAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetAllOU", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ADObject[] GetAllOU(string location, bool recursive) {
            object[] results = this.Invoke("GetAllOU", new object[] {
                        location,
                        recursive});
            return ((ADObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOUAsync(string location, bool recursive) {
            this.GetAllOUAsync(location, recursive, null);
        }
        
        /// <remarks/>
        public void GetAllOUAsync(string location, bool recursive, object userState) {
            if ((this.GetAllOUOperationCompleted == null)) {
                this.GetAllOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOUOperationCompleted);
            }
            this.InvokeAsync("GetAllOU", new object[] {
                        location,
                        recursive}, this.GetAllOUOperationCompleted, userState);
        }
        
        private void OnGetAllOUOperationCompleted(object arg) {
            if ((this.GetAllOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOUCompleted(this, new GetAllOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dairylea/webservices/GetAllObjects", RequestNamespace="http://dairylea/webservices/", ResponseNamespace="http://dairylea/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ADObject[] GetAllObjects(string location, bool recursive) {
            object[] results = this.Invoke("GetAllObjects", new object[] {
                        location,
                        recursive});
            return ((ADObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllObjectsAsync(string location, bool recursive) {
            this.GetAllObjectsAsync(location, recursive, null);
        }
        
        /// <remarks/>
        public void GetAllObjectsAsync(string location, bool recursive, object userState) {
            if ((this.GetAllObjectsOperationCompleted == null)) {
                this.GetAllObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllObjectsOperationCompleted);
            }
            this.InvokeAsync("GetAllObjects", new object[] {
                        location,
                        recursive}, this.GetAllObjectsOperationCompleted, userState);
        }
        
        private void OnGetAllObjectsOperationCompleted(object arg) {
            if ((this.GetAllObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllObjectsCompleted(this, new GetAllObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dairylea/webservices/")]
    public enum eServerType {
        
        /// <remarks/>
        DairyData,
        
        /// <remarks/>
        WebAuth,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dairylea/webservices/")]
    public partial class ADObject {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string DisplayName;
        
        /// <remarks/>
        public string Path;
        
        /// <remarks/>
        public string ObjectClass;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Company;
        
        /// <remarks/>
        public string GUID;
        
        /// <remarks/>
        public string BillingCity;
        
        /// <remarks/>
        public string BillingState;
        
        /// <remarks/>
        public string BillingStreetAddress;
        
        /// <remarks/>
        public string BillingZip;
        
        /// <remarks/>
        public string CarPhone;
        
        /// <remarks/>
        public string County;
        
        /// <remarks/>
        public string Department;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string GPSLat;
        
        /// <remarks/>
        public string GPSLong;
        
        /// <remarks/>
        public string HomePhone;
        
        /// <remarks/>
        public string Initials;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string Zip;
        
        /// <remarks/>
        public string StreetAddress;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Mobile;
        
        /// <remarks/>
        public string Pager;
        
        /// <remarks/>
        public string WorkPhone;
        
        /// <remarks/>
        public string Township;
        
        /// <remarks/>
        public string DoB;
        
        /// <remarks/>
        public string AdvancedFeaturePassword;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetServerCompletedEventHandler(object sender, SetServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetServerCompletedEventHandler(object sender, GetServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SingleServerSearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateOrganizationalUnitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationalUnitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateSecurityGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteSecurityGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMembersFromGroupCompletedEventHandler(object sender, GetMembersFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMembersFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMembersFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGroupMembershipCompletedEventHandler(object sender, GetGroupMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateUserAccountFullCompletedEventHandler(object sender, CreateUserAccountFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserAccountFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserAccountFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateUserAccountCompletedEventHandler(object sender, CreateUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UserExistsCompletedEventHandler(object sender, UserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AuthenticateUserWithServerCompletedEventHandler(object sender, AuthenticateUserWithServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserWithServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserWithServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public eServerType server {
            get {
                this.RaiseExceptionIfNecessary();
                return ((eServerType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnableUserAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DisableUserAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ADObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ADObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FindUserCompletedEventHandler(object sender, FindUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchUsersByPropertyCompletedEventHandler(object sender, SearchUsersByPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FindGroupCompletedEventHandler(object sender, FindGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ADObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ADObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllGroupsCompletedEventHandler(object sender, GetAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ADObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ADObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllOUCompletedEventHandler(object sender, GetAllOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ADObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ADObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllObjectsCompletedEventHandler(object sender, GetAllObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ADObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ADObject[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591